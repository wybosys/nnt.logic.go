#!/usr/bin/env python3

import os
import shutil
import subprocess
import sys
import platform
import re

is_cygwin = platform.system().startswith('CYGWIN')
is_windows = is_cygwin or platform.system() == 'Windows'
GOPATH_DELIMITER = ';' if is_windows else ':'


def safepath(str):
    if is_cygwin:
        res = re.compile('/cygdrive/([a-z]{0,2})/(.+)').findall(str)
        if not res:
            print('%s 不是有效的相对windows的目录' % str)
        else:
            str = '%s:/%s' % res[0]
    return str


# 框架约定GOPATH指向src/libs
PROJECT_HOME = safepath(os.path.abspath(os.path.dirname(sys.argv[0])))
GOPATH = GOPATH_DELIMITER.join([
    PROJECT_HOME + '/libs',
    PROJECT_HOME + '/',
])
os.environ['GOPATH'] = GOPATH

# 启动编译
if len(sys.argv) == 1:
    code, output = subprocess.getstatusoutput('go build -v -o app')
    print(output)

# 判断是否时其他功能
if 'get' in sys.argv:
    print('安装模块 ' + sys.argv[2])
    os.system('go get -v ' + sys.argv[2])
    # 移除get时产生的.git
    shutil.rmtree('libs/src/' + sys.argv[2] + '/.git')
